{"version":3,"sources":["../src/TestBackend.ts"],"sourcesContent":["import type {\n\tBackend,\n\tBeginDragOptions,\n\tDragDropActions,\n\tDragDropManager,\n\tHoverOptions,\n\tIdentifier,\n\tUnsubscribe,\n} from 'dnd-core'\n\nimport type { ITestBackend, TestBackendContext } from './types.js'\n\nfunction noop() {\n\t// noop\n}\n\nexport class TestBackendImpl implements Backend, ITestBackend {\n\tpublic didCallSetup = false\n\tpublic didCallTeardown = false\n\tpublic manager: DragDropManager\n\tpublic context: TestBackendContext\n\tprivate actions: DragDropActions\n\n\tpublic constructor(manager: DragDropManager, context: TestBackendContext) {\n\t\tthis.manager = manager\n\t\tthis.context = context\n\t\tthis.actions = manager.getActions()\n\t}\n\n\tpublic profile(): Record<string, number> {\n\t\treturn {}\n\t}\n\n\tpublic setup(): void {\n\t\tthis.didCallSetup = true\n\t}\n\n\tpublic teardown(): void {\n\t\tthis.didCallTeardown = true\n\t}\n\n\tpublic connectDragSource(): Unsubscribe {\n\t\treturn noop\n\t}\n\n\tpublic connectDragPreview(): Unsubscribe {\n\t\treturn noop\n\t}\n\n\tpublic connectDropTarget(): Unsubscribe {\n\t\treturn noop\n\t}\n\n\tpublic simulateBeginDrag(\n\t\tsourceIds: Identifier[],\n\t\toptions: BeginDragOptions,\n\t): void {\n\t\tthis.actions.beginDrag(sourceIds, options)\n\t}\n\n\tpublic simulatePublishDragSource(): void {\n\t\tthis.actions.publishDragSource()\n\t}\n\n\tpublic simulateHover(targetIds: Identifier[], options: HoverOptions): void {\n\t\tthis.actions.hover(targetIds, options)\n\t}\n\n\tpublic simulateDrop(): void {\n\t\tthis.actions.drop()\n\t}\n\n\tpublic simulateEndDrag(): void {\n\t\tthis.actions.endDrag()\n\t}\n}\n"],"names":["noop","TestBackendImpl","profile","setup","didCallSetup","teardown","didCallTeardown","connectDragSource","connectDragPreview","connectDropTarget","simulateBeginDrag","sourceIds","options","actions","beginDrag","simulatePublishDragSource","publishDragSource","simulateHover","targetIds","hover","simulateDrop","drop","simulateEndDrag","endDrag","manager","context","getActions"],"mappings":"AAYA,SAASA,IAAI,GAAG;AACf,OAAO;CACP;AAED,OAAO,MAAMC,eAAe;IAa3B,AAAOC,OAAO,GAA2B;QACxC,OAAO,EAAE,CAAA;KACT;IAED,AAAOC,KAAK,GAAS;QACpB,IAAI,CAACC,YAAY,GAAG,IAAI;KACxB;IAED,AAAOC,QAAQ,GAAS;QACvB,IAAI,CAACC,eAAe,GAAG,IAAI;KAC3B;IAED,AAAOC,iBAAiB,GAAgB;QACvC,OAAOP,IAAI,CAAA;KACX;IAED,AAAOQ,kBAAkB,GAAgB;QACxC,OAAOR,IAAI,CAAA;KACX;IAED,AAAOS,iBAAiB,GAAgB;QACvC,OAAOT,IAAI,CAAA;KACX;IAED,AAAOU,iBAAiB,CACvBC,SAAuB,EACvBC,OAAyB,EAClB;QACP,IAAI,CAACC,OAAO,CAACC,SAAS,CAACH,SAAS,EAAEC,OAAO,CAAC;KAC1C;IAED,AAAOG,yBAAyB,GAAS;QACxC,IAAI,CAACF,OAAO,CAACG,iBAAiB,EAAE;KAChC;IAED,AAAOC,aAAa,CAACC,SAAuB,EAAEN,OAAqB,EAAQ;QAC1E,IAAI,CAACC,OAAO,CAACM,KAAK,CAACD,SAAS,EAAEN,OAAO,CAAC;KACtC;IAED,AAAOQ,YAAY,GAAS;QAC3B,IAAI,CAACP,OAAO,CAACQ,IAAI,EAAE;KACnB;IAED,AAAOC,eAAe,GAAS;QAC9B,IAAI,CAACT,OAAO,CAACU,OAAO,EAAE;KACtB;IAnDD,YAAmBC,OAAwB,EAAEC,OAA2B,CAAE;QAN1E,KAAOrB,YAAY,GAAG,KAAK,AAjB5B,CAiB4B;QAC3B,KAAOE,eAAe,GAAG,KAAK,AAlB/B,CAkB+B;QAM7B,IAAI,CAACkB,OAAO,GAAGA,OAAO;QACtB,IAAI,CAACC,OAAO,GAAGA,OAAO;QACtB,IAAI,CAACZ,OAAO,GAAGW,OAAO,CAACE,UAAU,EAAE;KACnC;CAgDD"}